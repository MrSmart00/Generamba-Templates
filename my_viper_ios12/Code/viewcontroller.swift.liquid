{% include 'header' %}

import Foundation
import UIKit
import Combine
import Common

public final class {{ module_info.name }}ViewController: UIViewController, {{ module_info.name }}View, Injectable {
    public struct Dependency {
        let presenter: {{ module_info.name }}Presentation

        public init(presenter: {{ module_info.name }}Presentation) {
            self.presenter = presenter
        }
    }

    private let dependency: Dependency

    private var cancellables = Set<AnyCancellable>()

    public init?(coder: NSCoder, dependency: Dependency) {
        self.dependency = dependency
        super.init(coder: coder)
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    public override func viewDidLoad() {
        super.viewDidLoad()

        dependency.presenter.state
            .bind(to: Binder(self) { $0.bind(state: $1) })
            .disposed(by: disposeBag)
    }

    private func bind(state: {{ module_info.name }}.State) {
        // TODO: layout a view from state
    }

}
